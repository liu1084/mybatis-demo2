<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jim.mybatis.model.mapper.BookMapper">
    <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>
    <resultMap id="downloadTop10ResultMap" type="com.jim.mybatis.model.bo.BookBO">
        <result column="downloadTimes" property="downloadTimes"/>
        <result column="link" property="links"/>
        <result column="comments" property="comments"/>
        <result column="category_id" property="categories" javaType="List"/>
        <result column="author_id" property="authors" javaType="List"/>
        <result column="create_at" property="createAt" jdbcType="TIMESTAMP"/>
        <result column="update_at" property="updateAt" jdbcType="TIMESTAMP"/>
    </resultMap>


    <select id="books" resultType="com.jim.mybatis.model.po.Book">
        SELECT *
        FROM books
        LIMIT #{pageStart}, #{pageSize};
    </select>

    <select id="booksByKeywords" resultType="Book" parameterType="map">
        SELECT *
        FROM books
        WHERE 1=1 AND enabled = '1'
        <if test="query != null and query != ''">
            <bind name="query" value="'%' + query + '%'"/>
            AND name LIKE #{query}
            OR description LIKE #{query}
            OR isbn LIKE #{query}
        </if>
        LIMIT 10
    </select>

    <select id="getDownloadTimesTop10" resultMap="downloadTop10ResultMap">
        SELECT
            *,
            sum(t2.times) downloadTimes
        FROM
            books t1
            LEFT JOIN links t2 ON t1.id = t2.book_id
        WHERE
            1 = 1
            AND t1.enabled = '1'
        GROUP BY
            t2.book_id
        HAVING downloadTimes > 0
        ORDER BY downloadTimes DESC
        LIMIT 10;
    </select>

    <select id="getBookById" resultType="Book">
        SELECT *
        FROM books AS t1
        WHERE t1.id = #{bookId};
    </select>

    <insert id="insert" parameterType="ArrayList">
        <foreach collection="books" item="book" index="index">
            INSERT INTO books (name, isbn) VALUES (#{name}, #{isbn});
        </foreach>
    </insert>

    <update id="update" parameterType="Book">
        UPDATE books AS t1
        <set>
            <if test="name != null">name=#{name}</if>
            <if test="isbn != null">isbn=#{isbn}</if>
        </set>
        WHERE t1.id = #{id}
    </update>


    <delete id="delete" parameterType="Long">
        UPDATE books AS t1
        <set>
            t1.name = 0
        </set>
        WHERE t1.id = #{bookId}
    </delete>
</mapper>